pipeline:
  unit-tests:
    image: alpine:3.5
    commands:
      - apk update
      - apk upgrade
      - apk --update add --virtual build_deps postgresql-dev libxml2-dev libxslt-dev imagemagick imagemagick-dev openssl libpq libffi-dev bash curl-dev libstdc++ tzdata bash ca-certificates build-base ruby-dev libc-dev linux-headers postgresql-client postgresql git
      - apk --update add ruby ruby-io-console ruby-bundler ruby-irb ruby-bigdecimal ruby-json
      - cp /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
      - echo "America/Sao_Paulo" > /etc/timezone
      - export RAILS_ENV=test RACK_ENV=test DATABASE_URL=postgres://bonde@database/hub_api_test
      - psql -c 'create role bonde SUPERUSER LOGIN;' -hdatabase -Upostgres
      - psql -c 'create database hub_api_test;' -hdatabase -Upostgres
      - bundle install
      - rake db:migrate
      - bundle exec rspec spec
    when:
      event: [push, tag]

  db-tests:
    image: nossas/docker-pgtap
    commands:
      - /test.sh -h database -u bonde -w 3x4mpl3 -d hub_api_test -t './spec/**/**/*.sql'

  publish-staging:
    image: plugins/docker
    repo: nossas/bonde-server
    secrets: [ docker_username, docker_password ]
    tags:
      - ${DRONE_BRANCH}
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]

  deploy-staging-server:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: staging/server
    docker_image: nossas/bonde-server:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]

  deploy-staging-mailers:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: staging/server-mailers
    docker_image: nossas/bonde-server:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]

  deploy-staging-worker:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: staging/server-worker
    docker_image: nossas/bonde-server:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]

  publish:
    image: plugins/docker
    repo: nossas/bonde-server
    secrets: [ docker_username, docker_password ]
    tags:
      - ${DRONE_TAG##v}
    when:
      status: success
      event: tag

  deploy-server:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: staging/server
    docker_image: nossas/bonde-server:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      event: tag

  deploy-mailers:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: staging/server-mailers
    docker_image: nossas/bonde-server:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      event: tag

  deploy-worker:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: staging/server-worker
    docker_image: nossas/bonde-server:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      event: tag

  deploy-crontab:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: staging/server-crontab
    docker_image: nossas/bonde-server:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      event: tag

  notify:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: bonde_bots
    username: CI - ${DRONE_REPO_NAME}
    when:
      event: [ push, tag, build, publish, deployment, pull_request ]
      status: [ success, failure ]

services:
  database:
    image: postgres:9.6
  queue:
    image: redis:3.2.4-alpine
